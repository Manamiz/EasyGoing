 <div class="board-header">
   <div class="board-header-section">
      <h1>Tasks</h1>
   </div>
   <div class="board-header-section">
      <h1>To do</h1>
   </div>
   <div class="board-header-section">
      <h1>Doing</h1>
   </div>
   <div class="board-header-section">
      <h1>Done</h1>
   </div>
</div>

<?php foreach ($tasks as $task): ?>
<div class="board" task-id="<?php echo $task->id; ?>">
   <div class="board-first-column" section="users">
     <h4><?php echo $task->name; ?></h4>
   </div>
   <div class="todo board-section" section="TODO">
      <?php
         if($task->state == "TODO")
         {
            foreach($membersForTask[$task->id] as $member)
            {
               echo '<div id="'.$member->email.$task->id.'" member-id="'.$member->id.'" class="card"><img class="imgProject" width="40px" src="'.$this->basePath('img/users/'.$member->filePhoto).'"><br>'.$member->firstName.'</div>';
            }
            
         }
      ?>
   </div>
   <div class="doing board-section" section="DOING">
      <?php
         if($task->state == "DOING")
         {
            foreach($membersForTask[$task->id] as $member)
            {
               echo '<div id="'.$member->email.$task->id.'" member-id="'.$member->id.'" class="card"><img class="imgProject" width="40px" src="'.$this->basePath('img/users/'.$member->filePhoto).'"><br>'.$member->firstName.'</div>';
            }
         }
      ?>
   </div>
   <div class="done board-section" section="DONE">
      <?php
         if($task->state == "DONE")
         {
            foreach($membersForTask[$task->id] as $member)
            {
               echo '<div id="'.$member->email.$task->id.'" member-id="'.$member->id.'" class="card"><img class="imgProject" width="40px" src="'.$this->basePath('img/users/'.$member->filePhoto).'"><br>'.$member->firstName.'</div>';
            }
         }
      ?>
   </div>
</div>
<?php endforeach; ?>

<script>
var cards = document.querySelectorAll('.card');
for (var i = 0, n = cards.length; i < n; i++) {
   var card = cards[i];
   card.draggable = true;
};
var board = document.getElementsByClassName('board');
var hideMe;
for (var i in board) {
   board[i].onselectstart = function(e) {
      e.preventDefault();
   }
   board[i].ondragstart = function(e) {
      console.log('dragstart');
      hideMe = e.target;
      e.dataTransfer.setData('card', e.target.id);
      e.dataTransfer.effectAllowed = 'move';
   };
   board[i].ondragend = function(e) {
      e.target.style.visibility = 'visible';
   };
   var lastEneterd;
   board[i].ondragenter = function(e) {
      console.log('dragenter');
      if (hideMe) {
         hideMe.style.visibility = 'hidden';
         hideMe = null;
      }
      // Save this to check in dragleave.
      lastEntered = e.target;
      var section = closestWithClass(e.target, 'section');
      // TODO: Check that it's not the original section.
      if (section) {
         section.classList.add('droppable');
         e.preventDefault(); // Not sure if these needs to be here. Maybe for IE?
         return false;
      }
   };
   board[i].ondragover = function(e) {
      // TODO: Check data type.
      // TODO: Check that it's not the original section.
      if (closestWithClass(e.target, 'section')) {
         e.preventDefault();
      }
   };
   board[i].ondragleave = function(e) {
      // FF is raising this event on text nodes so only check elements.
      if (e.target.nodeType === 1) {
         // dragleave for outer elements can trigger after dragenter for inner elements
         // so make sure we're really leaving by checking what we just entered.
         // relatedTarget is missing in WebKit: https://bugs.webkit.org/show_bug.cgi?id=66547
         var section = closestWithClass(e.target, 'section');
         if (section && !section.contains(lastEntered)) {
            section.classList.remove('droppable');
         }
      }
      lastEntered = null; // No need to keep this around.
   };
   board[i].ondrop = function(e) {
      var section = closestWithClass(e.target, 'section');
      var id = e.dataTransfer.getData('card');
      if (id) {
         var member = document.getElementById(id);
         // Might be a card from another window.
         if (member) {
            if (section !== card.parentNode) {

               var targetTaskId = e.target.parentNode.getAttribute('task-id');
               var memberId = member.getAttribute('member-id');
               var targetSection = e.target.getAttribute('section');

               // TODO : Faire de l'ajax ici

               section.appendChild(member);

            }
         } else {
            alert('couldn\'t find member #' + id);
         }
      }
      section.classList.remove('droppable');
      e.preventDefault();
   };
}

function closestWithClass(target, className) {
   while (target) {
      if (target.nodeType === 1 &&
         target.classList.contains(className)) {
         return target;
      }
      target = target.parentNode;
   }
   return null;
}
$('.users').removeClass('droppable');
</script>
