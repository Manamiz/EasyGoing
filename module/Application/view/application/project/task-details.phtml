<script type="text/javascript">
    try {
        loadTutorial("taskDetails");
    } catch(err) {} // Catch to avoid errors of undefined function if the user doesn't want tutorial
</script>

<?php
   use Application\Utility\Priority;

   // Send Javascript variable with Zend.
   echo $this->headScript()->appendScript('// Indicate that the user is currently in the task page. Used in the board.websocket.js script.
                                           var isProjectPage = false;
                                           var taskId = "' . $task->id . '";
                                           var projectId = "' . $projectId . '";
                                           var userId = ' . $userId . ';');
   // Load websocket script.
   echo $this->headScript()
             ->prependFile($this->basePath() . '/js/board.websockets.js');

   // Return an HTML code rendering an event div, using for code factoring.
   function eventRendering($context, $type, $event)
   {
      $eventContent =
         '<div class="eventElem" name="eventIn' . $type . '">
            <table class="eventTable">
               <tr>
                  <td class="eventImgTd" rowspan=2><img class="eventImg" src="/img/events/' . $event->fileLogo . '" /></td>
                  <td><span class="newsFeedInfo">Posted on ' . date('d.m.Y', strtotime($event->date)) . ' by <u>' . $event->username . '</u></span></td>
               </tr>
               <tr>
                  <td><div class="eventMessage">' . $context->escapeHtml($event->message) . '</div></td>
               </tr>
            </table>
         </div>';

      return $eventContent;
   }
?>

<h1>Task details</h1>

<hr/>

<table class="taskDetailsTable">
   <tr>
      <td class="taskDetailsContentTable">
         <table>
            <tr>
               <td class="attributeName">Name</td>
               <td id="taskName"><?php echo $task->name; ?></td>
            </tr>
            <tr>
               <td class="attributeName">Deadline</td>
               <td id="taskDeadline"><?php echo ($task->deadLineDate == "0000-00-00" ? "-" : $task->deadLineDate); ?></td>
            </tr>
            <tr>
               <td class="attributeName">Duration</td>
               <td id="taskDuration"><?php echo $task->durationsInHours; ?>h</td>
            </tr>
            <tr>
               <td class="attributeName">Priority</td>
               <td id="taskPriority">
                  <?php
                     foreach(Priority::getConstants() as $value)
                     {
                        if ($task->priorityLevel == $value)
                        {
                           echo Priority::toString($value);
                        }
                     }
                  ?>
               </td>
            </tr>
            <tr>
               <td class="attributeName">Description</td>
               <td class="taskDescription" id="taskDescription"><?php echo (empty($task->description) ? "-" : $task->description); ?></td>
            </tr>
         </table>
      </td>
      <td class="newsFeed">
          <div>
              <!-- Nav tabs -->
              <ul class="nav nav-tabs tabsMain" id="historicalTabs" role="tablist">
                  <li role="presentation" class="active firstTab">
                     <a href="#all" aria-controls="all" role="tab" data-toggle="tab" style="outline: 0 none;">
                        All
                     </a>
                  </li>
                  <?php
                    // Dynamically add each tasks' events types to the tabs list.
                    foreach ($eventsTypes as $type)
                    {
                  ?>
                       <li role="presentation">
                          <a href="#<?php echo strtolower($type->type); ?>" aria-controls="<?php echo strtolower($type->type); ?>" role="tab" data-toggle="tab" style="outline: 0 none;">
                             <?php echo $type->type; ?>
                          </a>
                       </li>
                  <?php
                    }
                  ?>
                  <li class="historicalTitle">News Feed</li>
              </ul>

              <!-- Tab panes -->
              <div id="news" role="tutorial"></div>

              <div class="tab-content newsFeedTab">
                 <div role="tabpanel" class="tab-pane fade in active" id="all">
                    <?php
                       foreach ($events as $e)
                       {
                          echo eventRendering($this, "All", $e);
                       }
                     ?>
                 </div>
                 <?php
                   // Dynamically add each tasks' events types content to the tabs list.
                   foreach ($eventsTypes as $type)
                   {
                 ?>
                       <div role="tabpanel" class="tab-pane fade" id="<?php echo strtolower($type->type); ?>">
                          <?php
                            foreach ($events as $e)
                            {
                               if ($e->type == $type->type)
                               {
                                  echo eventRendering($this, $e->type, $e);
                               }
                            }
                          ?>
                       </div>
                 <?php
                    }
                 ?>
              </div>
          </div>
          <div class="input-group newsFeedInputs">
             <span class="input-group-addon imgType" id="basic-addon1"><img id="imgType" class="eventSelectImg" src="/img/events/default.svg" /></span>
             <div class="input-group-btn">
                <button id="btnTag" type="button" class="btn btn-default dropdown-toggle btnTag" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Select a tag... <span class="caret"></span></button>
                <ul id="tagMenu" class="dropdown-menu" role="menu">
                   <?php
                      // Dynamically add each tasks' events types content to the list.
                      foreach ($eventsTypes as $type)
                      {
                   ?>
                         <li><a class="elemType"><span id="spanType" img-type="<?php echo $type->fileLogo; ?>" id-type="<?php echo $type->id; ?>"><?php echo $type->type; ?> </span></a></li>
                   <?php
                      }
                   ?>
                </ul>
             </div>
             <input class="form-control taskEventTextInput" id="newsText" placeholder="Enter a news..." type="text" />
             <span class="input-group-btn">
                <button class="btn btnEasygoing" disabled="disabled" id="postBtn" type="button">Post!</button>
             </span>
         </div>
      </td>
   </tr>
</table>

<hr/>

<a class="btn btnEasygoing" href="<?php echo $_SERVER['HTTP_REFERER'] ?>">Back</a>

<script>
   $(document).ready(function() {
      // Triggered when the user choose a tag in the tags list.
      $('.dropdown-menu a').on('click', function() {
         // This custom event is used to make the <ul> tag act like a Bootstrap's dropdown list.
         $('.dropdown-toggle').html($(this).html() + '<span class="caret"></span>');
         // Change the image on the left of the text input.
         $("#imgType").attr("src", "/img/events/" + $(this).find("#spanType").attr("img-type"));
         // Enable the "Post!" button.
         $("#postBtn").prop("disabled", false);
      });

      // Click on the "Post!" button when the user pressed the "Enter" key in the
      // text field.
      $("#newsText").keyup(function(event){
         if(event.keyCode == 13) {
            $("#postBtn").click();
         }
      });

      // Add the event in the database if it is correctly formated.
      $("#postBtn").click(function() {
         // The post button must be enabled.
         if ($("#postBtn").is(':enabled') && $("#spanType").attr("id-type") > 0 && $("#newsText").val())
         {
            var postData = {
               "taskId": taskId,
               "text": $("#newsText").val(),
               "typeId": $("#spanType").attr("id-type")
            };

            // Make an AJAX GET request to the ProjectController to send the new
            // news feed's post.
            // We expect to receive back JSON as a response.
            $.ajax({
               type: "POST",
               url:  "/project/" + projectId + "/postNewsFeed",
               data: postData,
               dataType: 'json',
               // Occurs when the AJAX request was successfully executed.
               success: function (data)
               {
                  // In case of success, we send back the data to the expandProject()
                  // function.
                  if(data.success)
                  {
                     $("#newsText").val("");
                  }
                  else
                  {
                     console.log("An error occured, please retry.");
                  }
               },
               error: function (XMLHttpRequest, textStatus, errorThrown) {
                  alert("An error occured, please retry.");
               }
            });
         }
      });
   });
</script>
